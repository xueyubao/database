# DML语言
/*
数据操作语言：
插入：
修改：
删除：

*/

#一、 插入语句
方法一
/*
语法：
insert into 表名(列名,....)
values(值1,...);


*/
# 1. 要求插入的值的类型要和列的类型一致或兼容
SELECT * FROM beauty;
INSERT INTO beauty(id, NAME, sex, borndate, phone, photo, boyfriend_id)
VALUES(13, '唐艺昕', '女','1990-4-23','18999999999',NULL,2);

# 2. 
# 方式一：不可以为null的列必须插入值，可以为null的列如何插入值？
# 方式二：直接不写

# 3. 列的顺序可以调换, 但是要一一对应
INSERT INTO beauty(NAME, sex, id, phone)
VALUES('匠心', '女' , 16, '111111');

# 5. 可以省略列名，默认所有列，而且列的顺序和表中的列一致

方法二
/*
语法：
insert into 表名
set 列名= 值，列名=值， ...



*/

#1 
INSERT INTO beauty 
SET id = 19, NAME = '刘涛', phone = '1223';

#两种方式大pk
# 方法一支持插入多行，方法二不支持
INSERT INTO beauty
VALUES(23, '唐艺昕1', '女','1990-4-23','18999999999',NULL,2),
(33, '唐艺昕2', '女','1990-4-23','18999999999',NULL,2),
(43, '唐艺昕3', '女','1990-4-23','18999999999',NULL,2);

# 方法一支持子查询，方法二不支持
INSERT INTO beauty(id, NAME, phone)
SELECT 26, '宋茜', '32r4423';


# 二、修改语句
/*
1. 修改单表的记录
语法
update 表名
set 列 = 新值
where 筛选条件;

2. 修改多条的记录【补充】
语法：
sql92语法
update 表1 别名, 表2 别名
set 列 = 值,...
where 连接条件
and 筛选条件

sql99语法
update 表1 别名
连接类型 表2 别名
on 连接条件
set 列 = 值...
where 筛选条件


*/

#1. 修改单表的记录
#案例1：修改beauty表中姓唐的女神的电话为110；
UPDATE beauty SET phone = '110'
WHERE NAME LIKE '%唐%';

#案例2：修改boys表中id号为2的名称为张飞，魅力值10
UPDATE boys SET boyname = '张飞', userCP = 10
WHERE id = 2;


#2. 修改多表的记录
# 案例1 修改张无忌的女朋友的手机号为114
UPDATE boys bo
INNER JOIN beauty b ON bo.`id` = b.`boyfriend_id`
SET b.`phone` = '114'
WHERE bo.`boyName` = '张无忌';

# 案例2 修改没有男朋友的女神的男朋友编号都为2号
UPDATE boys bo
RIGHT JOIN beauty b ON bo.`id` = b.`boyfriend_id`
SET b.`boyfriend_id` = 2
WHERE bo.id IS NULL;

SELECT * FROM beauty;

# 三、 删除语句
/*
方式一：
语法：
1、单表的删除
delete from 表名 where 筛选条件

2、多表的删除【补充】
sql92语法：
delete 表1的别名, 表2的别名
from 表1 别名， 表2 别名
where 连接条件
and 筛选条件


sql99语法：
delete 表1的别名, 表2的别名
from 表1 别名
inner|left|right join 表2 别名 on 连接条件
where 筛选条件

方式二：
语法：
truncate table 表名

*/

# 方式一：delete
# 1 单表的删除
# 案例1： 删除手机号以9结尾的女神信息
DELETE FROM beauty WHERE phone LIKE '%9'
SELECT * FROM beauty;

# 2 多表的删除
# 案例： 删除张无忌的女朋友的信息
DELETE b
FROM beauty b
INNER JOIN boys bo ON b.`boyfriend_id` = bo.`id`
WHERE bo.`boyName` = '张无忌';
SELECT * FROM beauty;

# 案例：删除黄晓明的信息和他女朋友的信息
DELETE b,bo
FROM beauty b
INNER JOIN boys bo ON b.`boyfriend_id` = bo.`id`
WHERE bo.`boyName` = '黄晓明';

SELECT * FROM beauty;
SELECT * FROM boys;

# 方式二： truncate语句
# 案例： 将魅力值>100的男神的信息删除（清空语句）

# delete pk truncate 【面试题 ★】
#1 delete可以加where条件，truncate不能
#2 truncate 删除，效率会高一些
#3 假如要删除的表中有自增长列，如果用delete删除后，再插入数据，自增长列的值从断点开始
#  而truncate删除后，再插入数据，自增长列的值从1开始
#4 truncate删除没有返回值，delete删除有返回值
#5 truncate删除不能回滚，delete删除可以回滚
